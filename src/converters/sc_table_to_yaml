#!/usr/bin/env python3
from argparse import ArgumentParser, FileType
import csv
import os
import re
import sys

import anymarkup

# thanks stackoverflow
if __name__ == "__main__" and __package__ is None:
    sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from webapp.common import trim_space
from webapp.email_to_id import email_to_id


def main():
    parser = ArgumentParser()
    parser.add_argument("infile", type=FileType('r'))
    parser.add_argument("outfile", nargs='?', default=None)
    parser.add_argument("--no-submitter", action="store_true", help="Omit Submitter Contact")
    args = parser.parse_args()

    scs = {}
    reader = csv.DictReader(args.infile, dialect="excel-tab")
    for r_in in reader:
        r = {k: trim_space(re.sub(r"\\n", "\n", v)) for k, v in r_in.items() if v is not None}

        name = r["Name"]
        if name not in scs:
            scs[name] = {
                "ID": int(r["ID"]),
                "Description": r["Description"],
                "Community": r["Community"],
                "Contacts": {}
            }
            if name != r["LongName"]:
                scs[name]["LongName"] = r["LongName"]

        contact_type = r["ContactType"]
        if not (args.no_submitter and contact_type == "Submitter Contact"):
            if contact_type not in scs[name]["Contacts"]:
                scs[name]["Contacts"][contact_type] = []
            contact_id = email_to_id(r["PrimaryEmail"])
            scs[name]["Contacts"][contact_type].append({
                "Name": r["Contact"],
                "ID": contact_id
            })


    if args.outfile:
        anymarkup.serialize_file(scs, args.outfile)
    else:
        print(anymarkup.serialize(scs, "yaml").decode())

    return 0

sys.exit(main())

